% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.pred.data.R
\name{sim.pred.data}
\alias{sim.pred.data}
\title{Random linear model predictor data generator}
\usage{
sim.pred.data(col.num, col.length, FUNs, factor.YN = FALSE, ...)
}
\arguments{
\item{col.num}{A single numerical value indicating the number of output variables (columns) to generate. Should be strictly >0 and an integer.}

\item{col.length}{A single numerical value indicating the number of rows to generate in each column. Should be strictly >0 and an integer.}

\item{FUNs}{A vector of character strings of length col.num corresponding to the sampling function that should be used to create each column. Options are: "sample", "rnorm", "rbinom", "rpois", "runif", "seq", and "rep".}

\item{factor.YN}{A vector of logical values (TRUE or FALSE) of length col.num corresponding to whether each created column should be treated as a factor (TRUE). Defaults to FALSE, which will make all columns created numeric.}

\item{...}{Additional named arguments to be passed to the sampling functions as appropriate. Includes x.sample, replace, and sample.prob for sample(); max and min for runif(); mean and sd for rnorm(); size and binom.prob for rbinom(); to and from for seq(); x.rep and each for rep; and lambda for rpois(). If you are using a specific sampling function multiple times (i.e. for making multiple columns), inputs to these extra arguments will need to be supplied in a matrix with rows equal to the number of times you use the associated function (see examples). This enables you to use different input parameter values for two different columns drawn using the same function if you so choose. Alternative, each row can be the same to use the same inputs.}
}
\description{
Generates random predictor (X) data based on input parameters and specifications.
}
\details{
The idea of this function is to rapidly generate random columns of data based on sampling specifications you specify so that you can create an entire randomized data set (potentially with thousands of columns) in a single function call rather than column by column. It allows you to draw random data using a substantial range of standard randomization functions and even control which input parameters are used each instance a given randomization function is used if it's used more than once. As such, it may have multiple viable use cases. However, it's primary purpose is to generate a series of X data to be fed into sim.obs.data to then generate observed data based on some proposed relationship between the X data and observed data generated. See the documentation for the sim.obs.data function for details.
}
\examples{
#This example code shows all the basic features of the function as well as the proper input syntax.
test = sim.pred.data(col.num = 14, col.length = 50, 
   FUNs = c("sample", "sample", "rnorm", "rnorm", "runif", "runif", "rbinom", "rbinom", 
      "rpois", "rpois", "seq", "seq", "rep", "rep"),
   factor.YN = c(TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, 
       FALSE, FALSE, TRUE, FALSE, FALSE, TRUE, FALSE),
   x.sample = matrix(c(0,1, 10,-10), nrow=2, byrow=T), 
   replace=matrix(c(TRUE, TRUE), nrow=2), 
   sample.prob=matrix(c(0.5, 0.5, 0.1, 0.9), nrow=2, byrow=T), 
   mean = matrix(c(0, 20), nrow=2), sd = matrix(c(5,1), nrow=2), 
   min = matrix(c(-10,0), nrow=2, byrow=T), max = matrix(c(0, 10), nrow=2, byrow=T),
   size = matrix(c(3, 20), nrow=2), binom.prob=matrix(c(0.5,0.1), nrow=2, byrow=T),
   lambda = matrix(c(0.5, 2), nrow=2),
   from = matrix(c(0, 100), nrow=2), to = matrix(c(-100, 500), nrow=2),
   x.rep = matrix(c(0,1,2,0,50, 100), nrow=2, byrow=T), each = matrix(c(1, 3), nrow=2))
print(test)
str(test)
}
\author{
Alex Bajcz
}
